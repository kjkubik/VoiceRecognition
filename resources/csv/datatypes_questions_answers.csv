"data type","question","answer"
"boolean","How do you check if a variable is of type bool?","You can check if a variable is of type bool using isinstance(variable, bool)."
"boolean","What are the boolean values?","The boolean values in Python are True and False."
"boolean","What does the bool() function do?","Converts a value to its boolean equivalent."
"boolean","What is the output of True + False?","The result of True + False is 1 because True is equivalent to 1 and False to 0."
"boolean","What numeric value represents False when using the bool() function?","When using the bool() function, the numeric value representing False is 0."
"boolean","What value (or values) represent True when using the bool() function?","When using the bool() function, any non-zero number or non-empty string/list is True."
"deque","What does append(x) when using a deque?","append(x): Adds x to the right end of the deque."
"deque","What does appendleft(x) when using a deque?","appendleft(x): Adds x to the left end of the deque."
"deque","What does extend(iterable) when using a deque?","extend(iterable): Extends the deque by appending elements from an iterable."
"deque","What does extendleft(iterable) when using a deque?","extendleft(iterable): Extends the deque by appending elements from an iterable to the left end (the elements are added in reverse order)."
"deque","What does pop() when using a deque?","pop(): Removes and returns an element from the right end of the deque."
"deque","What does popleft() when using a deque?","popleft(): Removes and returns an element from the left end of the deque."
"deque","What does rotate(n) when using a deque?","rotate(n): Rotates the deque n steps to the right (positive n) or to the left (negative n)."
"deque","What is a `deque`?","A `deque` is a double-ended queue from the `collections` module, optimized for appending and popping from both ends."
"deque","What is a deque?","data structure from the collections module that allows fast appends and pops from both ends"
"deque","When do you use a deque?","When you need to efficiently add or remove elements from both ends (like implementing a queue or stack)"
"deque","When to Use deque?","If you need a queue that supports both FIFO (First-In-First-Out) and LIFO (Last-In-First-Out) operations efficiently or 
when you need a sliding window over a sequence of data. Deques are often used in algorithms like breadth-first search (BFS) where you need to access and process elements from both ends."
"dictionary","Can a Python list contain a dictionary as an element?","Use `chr()`: `chr(65)` returns `'A'`."
"dictionary","Can dictionaries store mutable objects as values?","Yes, dictionaries can store mutable objects like lists or sets as values."
"dictionary","Can dictionarieshave multiple keys with the same value?","Dictionaries cannot have multiple keys with the same name; each key must be unique."
"dictionary","Can dictionary keys be mutable types like lists?","No, keys must be immutable types like strings, integers, or tuples."
"dictionary","Can you slice a dictionary?","No, dictionaries do not support slicing."
"dictionary","How can you add a new key-value pair to a dictionary?","You add a new key-value pair using my_dict[key] = value."
"dictionary","How can you check if a key exists in a dictionary?","You check if a key exists using key in my_dict."
"dictionary","How can you iterate over both keys and values in a dictionary?","Use for key, value in my_dict.items():."
"dictionary","How can you iterate over both keys and values in a dictionary?","Use `for key, value in my_dict.items():`."
"dictionary","How can you update the value of a key in a dictionary?","You can update a value by assigning a new value to the key: my_dict[key] = new_value."
"dictionary","How do you access the value of a specific key in a dictionary?","You access the value of a specific key using my_dict[key]."
"dictionary","How do you add a key-value pair if the key does not exist?","Use my_dict.setdefault(key, value)."
"dictionary","How do you add a key-value pair if the key does not exist?","Use `my_dict.setdefault(key, value)`."
"dictionary","How do you check if a dictionary contains a specific key?","Use key in my_dict."
"dictionary","How do you check if a dictionary contains a specific key?","Use `key in my_dict`."
"dictionary","How do you check if a dictionary contains a specific value?","Use value in my_dict.values()."
"dictionary","How do you check if a dictionary contains a specific value?","Use `value in my_dict.values()`."
"dictionary","How do you check if a dictionary is empty?","Use if not my_dict:."
"dictionary","How do you check if a dictionary is empty?","Use `if not my_dict:`."
"dictionary","How do you clear all key-value pairs in a dictionary?","To clear a dictionary, use clear(): my_dict.clear()."
"dictionary","How do you convert a list of tuples into a dictionary?","You can convert a list of tuples into a dictionary using dict(): dict([('a', 1), ('b', 2)]) results in {'a': 1, 'b': 2}."
"dictionary","How do you copy a dictionary?","You copy a dictionary using the copy() method: my_dict.copy()."
"dictionary","How do you create a dictionary from two lists (keys and values)?","Use zip() and dict(): dict(zip(keys, values))."
"dictionary","How do you create a dictionary from two lists (keys and values)?","Use `zip()` and `dict()`: `dict(zip(keys, values))`."
"dictionary","How do you create a dictionary with default values for missing keys?","Use collections.defaultdict()."
"dictionary","How do you create a dictionary with default values for missing keys?","Use defaultdict()."
"dictionary","How do you create a dictionary with default values for missing keys?","Use `collections.defaultdict()`."
"dictionary","How do you create a dictionary with default values for missing keys?","Use `defaultdict()`."
"dictionary","How do you create a dictionary with default values using `defaultdict()`?","use defaultdict with something like int (giving you a 0), set (giving you an empty set), list (giving you an empty list)"
"dictionary","How do you create a dictionary with default values using defaultdict()?","from collections import defaultdict; d = defaultdict(int)."
"dictionary","How do you create an empty dictionary?","You create an empty dictionary using {} or dict()."
"dictionary","How do you delete all items in a dictionary?","Use my_dict.clear()."
"dictionary","How do you delete all items in a dictionary?","Use `my_dict.clear()`."
"dictionary","How do you find the number of items in a dictionary?","Use len(my_dict)."
"dictionary","How do you find the number of items in a dictionary?","Use `len(my_dict)`."
"dictionary","How do you get all values from a dictionary?","Use my_dict.values()."
"dictionary","How do you get all values from a dictionary?","Use `my_dict.values()`."
"dictionary","How do you get the key for a given value in a dictionary?","Use a loop or dictionary comprehension: [k for k, v in my_dict.items() if v == 'value']."
"dictionary","How do you get the key for a given value in a dictionary?","Use a loop or dictionary comprehension: `[k for k, v in my_dict.items() if v == 'value']`."
"dictionary","How do you iterate through both keys and values in a dictionary?","You iterate through both keys and values using for key, value in my_dict.items():."
"dictionary","How do you iterate through the keys of a dictionary?","You can iterate through keys using a for loop: for key in my_dict:."
"dictionary","How do you make a copy of a dictionary?","Use my_dict.copy()."
"dictionary","How do you make a copy of a dictionary?","Use `my_dict.copy()`."
"dictionary","How do you merge two dictionaries in Python 3.9 and later?","Use the | operator: dict1 | dict2."
"dictionary","How do you merge two dictionaries in Python 3.9 or later?","Use the `|` operator: `dict1 | dict2`."
"dictionary","How do you merge two dictionaries?","You merge two dictionaries using {**dict1, **dict2}."
"dictionary","How do you remove a key-value pair from a dictionary?","You can remove a key-value pair using del my_dict[key]."
"dictionary","How do you remove a key-value pair from a dictionary?","Use del my_dict[key] or my_dict.pop(key)."
"dictionary","How do you remove a key-value pair from a dictionary?","Use `del my_dict[key]` or `my_dict.pop(key)`."
"dictionary","How do you retrieve all keys or all values from a dictionary?","You can retrieve all keys with my_dict.keys() and all values with my_dict.values()."
"dictionary","How do you update an existing key in a dictionary?","Use my_dict[key] = new_value."
"dictionary","How do you update an existing key in a dictionary?","Use `my_dict[key] = new_value`."
"dictionary","What does the `get()` method do in a dictionary?","It returns the value for a key if it exists, otherwise returns `None` or a default value."
"dictionary","What does the `popitem()` method do in a dictionary?","It removes and returns a random key-value pair from the dictionary."
"dictionary","What does the get() method do in a dictionary?","It returns the value for a key if it exists, otherwise returns None or a default value."
"dictionary","What does the get() method do in a Python dictionary?","get() retrieves the value for a key or returns None if the key doesn’t exist."
"dictionary","What does the popitem() method do in a dictionary?","It removes and returns a random key-value pair from the dictionary."
"dictionary","What happens if you try to access a key that doesn’t exist in a dictionary?","If the key doesn’t exist, it raises a KeyError unless you use the get() method, which returns None if the key doesn’t exist."
"dictionary","What is a dictionary?","A dictionary is an unordered collection of key-value pairs."
"dictionary","What is the result of calling `my_dict.key()?","It returns a view object that displays a list of all keys in the dictionary."
"dictionary","What is the result of calling my_dict.keys()?","It returns a view object that displays a list of all keys in the dictionary. "
"dictionary","What will the output of len({"key": "value"}) be?","len({"key": "value"}) returns 1 because there is one key-value pair."
"dictionary","What is the syntax for creating an empty dictionary?","Use {} or dict()."
"dictionary","How do you access a value in a dictionary by its key?","Use my_dict[key]."
"dictionary","How do you add a new key-value pair to a dictionary?","Use my_dict[key] = value."
"dictionary","How do you remove a key-value pair from a dictionary?","Use del my_dict[key]."
"dictionary","How do you check if a key exists in a dictionary?","Use key in my_dict."
"dictionary","How do you get all keys from a dictionary?","Use my_dict.keys()."
"dictionary","How do you get all values from a dictionary?","Use my_dict.values()."
"dictionary","How do you remove a key from a dictionary without raising an error if the key doesn’t exist?","Use my_dict.pop(key, None)."
"dictionary","How do you merge two dictionaries in Python?","Use update(): dict1.update(dict2)."
"dictionary","How do you iterate over a dictionary’s keys and values?","Use my_dict.items()."
"dictionary","How do you get a default value for a key that may not exist in a dictionary?","Use get() method: my_dict.get(key, default)."
"dictionary","How do you clear all key-value pairs from a dictionary?","Use my_dict.clear()."
"dictionary","What is the output of dict1 == dict2 when comparing dictionaries?","It returns True if both dictionaries have the same keys and values, otherwise False."
"dictionary","How do you create a dictionary from two lists (keys and values)?","Use zip() and dict(): dict(zip(keys, values))."
"dictionary","What is a defaultdict in Python?","A defaultdict is a dictionary that provides default values for missing keys."
"dictionary","What is the time complexity of looking up a value in a dictionary?","It is O(1) on average."
"dictionary","How do you remove all items with a specific value in a dictionary?","Use a loop or dictionary comprehension: {k: v for k, v in my_dict.items() if v != value}."
"dictionary","Can dictionary keys be mutable types like lists?","No, dictionary keys must be immutable."
"dictionary","How do you check the number of items in a dictionary?","Use len(my_dict)."
"dictionary","How do you find the most frequent value in a dictionary?","Use collections.Counter() to find the most common value."
"enumerate","What is the purpose of `enumerate()`?","It adds a counter to an iterable and returns it as an enumerate object."
"numeric","What is the output of `type(3.14)`?","class 'float'"
"frozen set","How do you convert a set into a frozen set?","Use frozenset(my_set)."
"frozen set","How do you convert a set into a frozen set?","Use `frozenset(my_set)`."
"frozen set","How do you convert a set to a frozen set?","Use `frozenset(my_set)`."
"frozen set","What is the purpose of the `frozenset` type?","A `frozenset` is an immutable version of a set."
"iterator","What does `reversed()` do?","It returns an iterator that accesses the given sequence in the reverse order."
"iterator","What does reversed() do?","It returns an iterator that accesses the given sequence in the reverse order"
"iterator","What is the purpose of enumerate()?","It adds a counter to an iterable and returns It as an enumerate object."
"list","Can a Python list contain a dictionary as an element?","Yes, lists can contain any data type, including dictionaries."
"list","How can you check if an element is present in a list?","Use the in keyword: element in my_list."
"list","How can you check if an element is present in a list?**","Use the `in` keyword: `element in my_list`."
"list","How can you merge two lists using the `extend()` method?","`list1.extend(list2)` adds all elements of `list2` to `list1`."
"list","How can you merge two lists using the extend() method?","list1.extend(list2) adds all elements of list2 to list1."
"list","How do you check if a list is empty?","Use if not my_list: or len(my_list) == 0."
"list","How do you check if a list is empty?","Use `if not my_list:` or `len(my_list) == 0`."
"list","How do you convert a string to a list of words?","Use split(): "Hello world".split()."
"list","How do you create a list from a string?","Use list(). It will create a list of characters."
"list","How do you create a list of integers from 0 to 9?","Use list(range(10))."
"list","How do you create a list of integers from 0 to 9?","Use `list(range(10))`."
"list","How do you create a list with repeated elements?","Use multiplication: [1] * 5 creates [1, 1, 1, 1, 1]."
"list","How do you create a list with repeated elements?","Use multiplication: `[1] * 5` creates `[1, 1, 1, 1, 1]`."
"list","How do you create a shallow copy of a list?","Use my_list.copy() or my_list[:]."
"list","How do you create a shallow copy of a list?","Use `my_list.copy()` or `my_list[:]`."
"list","How do you find the smallest element in a list?","Use the min() function: min(my_list)."
"list","How do you find the smallest element in a list?","Use the `min()` function: `min(my_list)`."
"list","How do you find the sum of elements in a list?","Use the sum() function: sum(my_list)."
"list","How do you find the sum of elements in a list?","Use the `sum()` function: `sum(my_list)`."
"list","How do you remove all occurrences of a specific element from a list?","Use a loop or a list comprehension: [x for x in my_list if x != 3] to remove all 3s."
"list","How do you remove all occurrences of a specific element from a list?","Use a loop or a list comprehension: `[x for x in my_list if x != 3]` to remove all `3`s."
"list","How do you remove the last element of a list without using `pop()`?","You can use slicing: `my_list[:-1]`."
"list","How do you remove the last element of a list without using pop()?","You can use slicing: my_list[:-1]."
"list","What does max() do when applied to a list of strings?","It returns the lexicographically largest string."
"list","What does the `clear()` method do in a list?","It removes all elements from the list: `my_list.clear()`."
"list","What does the clear() method do in a list?","It removes all elements from the list: my_list.clear()."
"list","What happens if you try to access an out-of-bounds index in a list?","It raises an IndexError."
"list","What happens if you try to access an out-of-bounds index in a list?","It raises an `IndexError`."
"list","What is the `sorted()` function used for?","It returns a sorted list of elements from any iterable."
"list","What is the difference between `append()` and `extend()` in a list?","`append()` adds a single element to the end of a list, while `extend()` adds each element of an iterable to the end of a list."
"list","What is the difference between `list.sort()` and `sorted(list)`?","`list.sort()` sorts the list in place (modifies the original list), while `sorted(list)` returns a new sorted list."
"list","What is the difference between append() and extend() in a list?","append() adds a single element to the end of a list, while extend() adds each element of an iterable (like a list) to the end of a list."
"list","What is the difference between list.sort() and sorted(list)?","list.sort() sorts the list in place (modifies the original list), while stored(list) returns a new sorted list."
"list","What is the result of [1, 2, 3] * 2?","It results in [1, 2, 3, 1, 2, 3] because multiplying a list repeats its elements"
"list","What is the result of `[1, 2, 3] * 2`?","It results in `[1, 2, 3, 1, 2, 3]` because multiplying a list repeats its elements."
"list","What is the sorted() function used for?","It returns a sorted list of elements from any iterable."
"list","What is the result of [10, 20] + [30, 40]?","[10, 20, 30, 40]—this concatenates two lists."
"list","How do you create a list with elements ranging from 1 to 10 (inclusive)?","Use list(range(1, 11))."
"list","How do you remove an element by its index in a list?","Use pop(index)."
"list","How can you insert an element at a specific position in a list?","Use insert(index, element)."
"list","How do you replace an element in a list?","Assign the new value to the index: my_list[index] = new_value."
"list","How do you find the index of the first occurrence of an element in a list?","Use index() method: my_list.index(element)."
"list","Can a list contain other lists as elements?","Yes, lists can contain nested lists."
"list","How do you concatenate multiple lists?","Use the + operator: list1 + list2 + list3."
"list","How do you check the number of elements in a list?","Use len()."
"list","What is the time complexity of appending an element to a list?","It is O(1) on average."
"list","How do you remove duplicates from a list?","Convert it to a set: list(set(my_list))."
"list","How do you check if a list contains multiple elements?","Use if all(element in my_list for element in other_elements):."
"list","How do you find the most frequent element in a list?","Use collections.Counter: Counter(my_list).most_common(1)."
"list","How do you make a shallow copy of a list?","Use my_list.copy() or my_list[:]."
"list","How do you convert a list to a string?","Use ''.join(my_list) (for lists of strings)."
"list","How do you find the common elements between two lists?","Use set(list1) & set(list2)."
"list","What is the difference between list sort() and sorted(list)?","list.sort() sorts in place, modifying the original list. sorted(list) returns a new sorted list."
"list","How do you check if a list is a subset of another list?","Use set(list1).issubset(list2)."
"list","How do you make all elements of a list uppercase?","Use a list comprehension: [x.upper() for x in my_list]."
"list","How do you count how many times a specific value appears in a list?","Use my_list.count(value)."
"list","What does the join() method do?","It concatenates a list of strings into a single string."
"list","How do you create a set from a list with duplicates?","Use set(my_list) to remove duplicates."
"list ","Can listscontain elements of different data types?","Yes, lists can contain elements of different types (e.g., [1, 'apple', 3.14])."
"list ","Can you have duplicate elements in a Python list?","Yes, lists can have duplicate elements (e.g., [1, 1, 2])."
"list ","How can you find the maximum element in a list?","You can find the maximum element using the max() function: max([1, 5, 3]) returns 5."
"list ","How can you remove the first occurrence of an element from a list?","You can remove the first occurrence of an element using the remove() method: my_list.remove(3)."
"list ","How do you access the last element of a list?","You can access the last element of a list using negative indexing: my_list[-1]."
"list ","How do you append an element to a list?","You can append an element to a list using the append() method: my_list.append(5)."
"list ","How do you count the number of occurrences of an element in a list?","You can count occurrences using the count() method: my_list.count(3) counts how many times 3 appears."
"list ","How do you create a sublist (slice)?","A sublist is created using slicing: my_list[1:3] extracts elements at indices 1 and 2."
"list ","How do you create an empty list?","An empty list is created using []."
"list ","How do you find the index of an element in a list?","You can find the index of an element using the index() method: my_list.index(3)."
"list ","How do you insert an element at a specific index in a list?","You insert an element at a specific index using insert(): my_list.insert(1, 10) inserts 10 at index 1."
"list ","How do you merge two lists?","You merge two lists using the + operator: [1, 2] + [3, 4] results in [1, 2, 3, 4]."
"list ","How do you reverse the order of elements in a list?","You can reverse a list using the reverse() method: my_list.reverse()."
"list ","How do you sort a list?","You can sort a list using the sort() method: my_list.sort()."
"list ","What does the pop() method do?lists?","pop() removes and returns the last element of a list: my_list.pop() removes the last element."
"list ","What is a list?","A list in Python is an ordered collection of elements that can be of any type."
"list ","What is a nested list?","A nested list is a list that contains other lists, e.g., [[1, 2], [3, 4]]."
"list ","What is the difference between remove() and pop()lists?","remove() removes the first occurrence of an element, while pop() removes the last element."
"list ","What will be the output of len([1, 2, 3, 4])?","len([1, 2, 3, 4]) returns 4 because there are four elements in the list."
"list ","What will list([1, 2, 3]) return?","list([1, 2, 3]) returns the list [1, 2, 3]."
"memory addressing","How do you check if two objects are the same in memory?","Use is keyword: object1 is object2."
"memory addressing","What is the id() function?","It returns the memory address of an object."
"memory addressing", "What is memory addressing management in Python?","memory addressing management in Python is the process of managing the memory addressing used by Python objects and variables. It involves allocating and freeing memory addressing, tracking object references, and ensuring that memory addressing is efficiently used. Python handles memory addressing management automatically using techniques like reference counting and garbage collection.",
"memory addressing", "What is the difference between mutable and immutable objects in Python in terms of memory addressing?","Mutable objects (e.g., lists, dictionaries) can be modified after creation. These objects may have their memory addressing reallocated if their size changes. Immutable objects (e.g., strings, tuples) cannot be changed once created. They do not alter their memory addressing space, and any operation that modifies them will create a new object in memory addressing.",
"memory addressing", "What is the Python memory addressing model and how does it affect object creation?","Python's memory addressing model involves using the heap and stack: Stack: Used for storing local variables and function calls. Heap: Used for dynamically allocated memory addressing for objects. Python manages objects in the heap, allocating memory addressing when objects are created and releasing it when no longer referenced (via garbage collection).",
"memory addressing", "What is the purpose of Python’s garbage collection?","Python’s garbage collection automatically cleans up objects that are no longer in use, freeing memory addressing. It uses reference counting to track the number of references to an object, and when the reference count drops to zero, the object is deleted. Additionally, Python’s garbage collector uses cycle detection to handle circular references that reference each other, which reference counting alone cannot manage.",
"memory addressing", "What is the role of the id() function in Python?","The id() function in Python returns the identity of an object, which is unique for that object during its lifetime. It is often used to get the memory addressing address of an object, helping you identify whether two variables refer to the same object in memory addressing.",
"memory addressing", "What is a memory addressing leak in Python, and how can it occur?","A memory addressing leak in Python occurs when memory addressing that is no longer in use is not released, typically because references to objects are still being held unintentionally. It can happen if circular references occur and the garbage collector fails to detect them. memory addressing leaks can be prevented by ensuring that unused objects are dereferenced properly.",
"memory addressing", "How does Python handle memory addressing for large data structures (e.g., lists, dictionaries)?","Python manages memory addressing for large data structures by dynamically resizing them. Lists and dictionaries are implemented with arrays and hash tables, respectively, that can grow in size as needed. When the size of the structure exceeds its current capacity, Python reallocates memory addressing and moves the data to a new location in memory addressing, ensuring there is enough space for new elements.",
"memory addressing", "What are weak references in Python?","A weak reference is a reference to an object that does not prevent it from being garbage collected. Weak references are used when you need to refer to an object without increasing its reference count, such as in caching scenarios. The weakref module in Python provides tools for working with weak references.",
"memory addressing", "How does Python’s memory addressing usage differ between small and large integers?","In Python, small integers (from -5 to 256) are pre-allocated and cached to optimize memory addressing usage. These integers are stored in a special memory addressing region and reused whenever possible. Larger integers, however, are dynamically allocated and take up more memory addressing since they can represent larger values.",
"memory addressing", "What is the memory addressing layout of a Python object?","Python objects have a specific memory addressing layout that includes: Object header: containing reference, type and other metadata. Data area: storing the actual data (e.g. for lists, this will store the list elements. memory addressing overhead: Python objects come with overhead to store this information, which can vary depending on the object type (e.g., a list has overhead for size management, while a string stores a sequence of characters).",
"numeric","How do you convert a float to an integer?","You convert a float to an integer using the int() function."
"numeric","How do you find the absolute value of a number?","Use abs()."
"numeric","How do you find the absolute value of a number?","Use `abs()`."
"numeric","How do you find the square root of a number?","Use math.sqrt() or ** operator."
"numeric","How do you find the square root of a number?","Use `math.sqrt()` or `**` operator."
"numeric","What is the difference between an integer and a float?","An integer is a whole number. A float is a number with a decimal point."
"numeric","What is the output of `divmod(8, 3)`?","It returns `(2, 2)`—the quotient and the remainder."
"numeric","What is the output of divmod(8, 3)?","It returns (2, 2)—the quotient and the remainder."
"numeric","What is the result of 3 + 5.0?","The result of 3 + 5.0 is 8.0 because Python automatically converts 3 to a float for the operation."
"numeric","What is the result of int(3.14)?","int(3.14) results in 3 because the decimal part is truncated."
"numeric","What will be the output of type(3)?","The output is class 'int'."
"numeric","What is the output of 2**3?","8—this is the result of exponentiation."
"numeric","What is the result of int("10")?","10—it converts the string "10" to the integer 10."
"numeric","How do you round a floating-point number to 2 decimal places?","Use round(number, 2)."
"numeric","How do you check if a number is even or odd?","Use number % 2 == 0 for even and number % 2 != 0 for odd."
"object","Can a string be concatenated with an integer?","No, you cannot directly concatenate a string and an integer. You must convert the integer to a string first: str(5) + " apples"."
"object","How do you check if an object is of a specific data type?","Use isinstance()."
"object","How do you check if an object is of a specific data type?","Use `isinstance()`."
"object","How do you check if two objects are the same in memory?","Use `is` keyword: `object1 is object2`."
"object","What is the difference between str and repr functions?","str() returns a string version of an object, while repr() returns a string that represents the object more precisely (useful for debugging)."
"object","What is the output of type(3.14)?","<class 'float'>."
"object","How do you find the type of an object?","Use type()."
"object","How do you check the type of a variable?","Use type(variable)."
"object ","How can you check the data type of a variable?","You can use type(variable) to check the type of a variable."
"range","What is the `range()` function?","It generates a sequence of numbers, often used in for-loops."
"range","What is the range() function?","It generates a sequence of numbers, often used in for-loops."
"set","Can a set contain a set as an element?","No, because sets are mutable and cannot be hashed."
"set","Can a set contain duplicate elements?","No, a set cannot contain duplicate elements. For example, {1, 2, 2} results in {1, 2}."
"set","Can a set contain other sets?","No, sets cannot contain other sets because sets are mutable and cannot be hashed."
"set","How can you check if an element exists in a set?","You can check if an element exists in a set using in: 3 in my_set."
"set","How can you find the union of two sets?","You find the union of two sets using the | operator or union() method."
"set","How do you add an element to a set?","You add an element using add(): my_set.add(3)."
"set","How do you add an element to a set?","Use add(): my_set.add(3)."
"set","How do you add an element to a set?","Use `add()`: `my_set.add(3)`."
"set","How do you check if a set is a subset of another set?","Use issubset(): set1.issubset(set2)."
"set","How do you check if a set is a subset of another set?","Use `issubset()`: `set1.issubset(set2)`."
"set","How do you check if a set is a superset of another set?","Use issuperset(): set1.issuperset(set2)."
"set","How do you check if a set is a superset of another set?","Use `issuperset()`: `set1.issuperset(set2)`."
"set","How do you check if an element is in a set?","Use element in my_set."
"set","How do you check if an element is in a set?","Use `element in my_set`."
"set","How do you check if two sets are disjoint (have no common elements)?","Use isdisjoint(): set1.isdisjoint(set2)."
"set","How do you check if two sets are disjoint (have no common elements?","Use `isdisjoint()`: `set1.isdisjoint(set2)`."
"set","How do you check if two sets are disjoint?","You check if two sets are disjoint using the isdisjoint() method."
"set","How do you clear all elements from a set?","Use clear()."
"set","How do you clear all elements from a set?","Use `clear()`."
"set","How do you convert a list to a set?","Use set(): set(my_list)."
"set","How do you convert a set to a list?","Use list(): list(my_set)."
"set","How do you convert a set to a list?","Use `list()`: `list(my_set)`."
"set","How do you create a set from a list?","You can create a set from a list using set(): set([1, 2, 3])."
"set","How do you create a set with multiple elements from a string?","Use set("string")."
"set","How do you create a set with multiple elements from a string?","Use `set("string")`."
"set","How do you create a set with unique elements from a list?","Use set(): set([1, 2, 2, 3]) results in {1, 2, 3}."
"set","How do you create a set with unique elements from a list?","Use `set()`: `set([1, 2, 2, 3])` results in `{1, 2, 3}`."
"set","How do you create an empty set?","You create an empty set using set()."
"set","How do you find the difference of two sets?","Use the - operator or the difference() method: set1 - set2."
"set","How do you find the difference of two sets?","Use the `-` operator or the `difference()` method: `set1 - set2`."
"set","How do you find the intersection of two sets?","You find the intersection of two sets using the & operator or intersection() method."
"set","How do you find the intersection of two sets?","Use the & operator or the intersection() method: set1 & set2."
"set","How do you find the intersection of two sets?","Use the `&` operator or the `intersection()` method: `set1 & set2`."
"set","How do you find the largest element in a set?","Use max() function: max(my_set)."
"set","How do you find the largest element in a set?","Use `max()` function: `max(my_set)`."
"set","How do you find the length of a set?","You find the length of a set using len()."
"set","How do you find the length of a set?","Use len()."
"set","How do you find the length of a set?","Use `len()`."
"set","How do you find the smallest element in a set?","Use min() function: min(my_set)."
"set","How do you find the smallest element in a set?","Use `min()` function: `min(my_set)`."
"set","How do you find the symmetric difference of two sets?","Use the ^ operator or the symmetric_difference() method: set1 ^ set2"
"set","How do you find the symmetric difference of two sets?","Use the `^` operator or the `symmetric_difference()` method: `set1 ^ set2`."
"set","How do you find the union of two sets?","Use the | operator or the union() method: set1 | set2."
"set","How do you find the union of two sets?","Use the `|` operator or the `union()` method: `set1 | set2`."
"set","How do you iterate over all elements of a set?","Use a for loop: for element in my_set:."
"set","How do you iterate over all elements of a set?","Use a `for` loop: `for element in my_set:`."
"set","How do you perform a set difference?","You perform a set difference using - or difference()."
"set","How do you remove a random element from a set?","Use pop()."
"set","How do you remove a random element from a set?","Use `pop()`."
"set","How do you remove an arbitrary element from a set?","You remove an arbitrary element using pop() (which also returns the removed element)."
"set","How do you remove an element from a set?","You remove an element using remove(): my_set.remove(3)."
"set","How do you remove an element from a set?","Use remove() or discard()."
"set","How do you remove an element from a set?","Use `remove()` or `discard()`."
"set","What happens if you try to add a mutable element (like a list) to a set?","You cannot add mutable elements (like lists) to a set because they are not hashable."
"set","What is a set?","A set is an unordered collection of unique elements."
"set","What is the difference between `remove()` and `discard()` in sets?","Each removes the element. But remove raises and error, discard does not."
"set","What is the difference between a set and a list?","Sets do not allow duplicate elements, unlike lists."
"set","What is the difference between remove() and discard() in sets?","remove() raises an error if the element is not found, while discard() doesn't."
"set","What is the purpose of the frozenset type?","A frozenset is an immutable version of a set."
"set","What is the purpose of the frozenset?","A frozenset is an immutable set, meaning its elements cannot be modified."
"set","What is the result of set([1, 2, 3]) & set([2, 3, 4])?","{2, 3}—this is the intersection of the two sets."
"set","How do you find the union of two sets?","Use the | operator: set1 | set2."
"set","How do you find the difference of two sets?","Use the - operator: set1 - set2."
"set","What does set([1, 2, 2, 3]) return?","{1, 2, 3}—a set removes duplicates."
"set","How do you check if two sets are disjoint (have no common elements)?","Use isdisjoint(): set1.isdisjoint(set2)."
"set","How do you check if a set is a subset of another set?","Use issubset(): set1.issubset(set2)."
"set","How do you check if a set is a superset of another set?","Use issuperset(): set1.issuperset(set2)."
"set","Can a set contain mutable elements like lists?","No, sets cannot contain mutable elements, only immutable ones."
"set","How do you remove a random element from a set?","Use pop()."
"set","How do you create a frozen set in Python?","Use frozenset(): frozenset(my_set)."
"set","What does the symmetric_difference() method do?","It returns the set of elements that are in either of the sets but not both."
"set","What is the time complexity of checking if an element exists in a set?","It is O(1) on average."
"set","How do you create a set from a string?","Use set('string'), which creates a set of unique characters."
"set","How do you find the number of elements in a set?","Use len()."
"set","How do you create a copy of a set?","Use my_set.copy()."
"set","How do you iterate over elements of a set?","Use a for loop: for element in my_set."
"set","What is the time complexity of adding an element to a set?","It is O(1) on average."
"set","How do you remove all elements from a set?","Use clear()."
"set","How do you convert a list to a set?","Use set(my_list)."
"set","Can sets contain other sets as elements?","No, sets are mutable and therefore not hashable."
"set","How do you remove an element from a string?","Strings are immutable, so you can't modify them directly, but you can use slicing or string methods to remove elements."
"set","How do you reverse a string?","Use slicing: string[::-1]."
"set","How do you format a string?","Use f-string: f"Hello {name}"."
"string","Can a stringbe used as a number?","No, a string cannot be used as a number unless it is converted to a number (e.g., int('123'))."
"string","How do you access the first character of a string?","To access the first character of a string, you use indexing: "Python"[0] results in "P"."
"string","How do you change the case of a string (to uppercase)?","To change a string to uppercase, you use upper(): "python".upper() results in "PYTHON"."
"string","How do you check if a string contains only digits?","Use str.isdigit()."
"string","How do you check if a string contains only digits?","Use `str.isdigit()`."
"string","How do you check if a substring exists in a string?","You can check if a substring exists in a string using the in keyword: "py" in "Python" results in True."
"string","How do you concatenate two strings?","You concatenate two strings using +: "Hello" + " World" results in "Hello World"."
"string","How do you convert a string into an integer?","You can convert a string to an integer using the int() function: int("123") results in 123."
"string","How do you convert a string to a list of words?","Use `split()`: `"Hello world".split()`."
"string","How do you convert an integer to a string?","You can convert an integer to a string using str(): str(123) results in "123"."
"string","How do you declare a string?","A string in Python is declared by enclosing characters in either single or double quotes."
"string","How do you format a string using f-strings?","begin string with the letter f, then double quotes for all string values you need to add and curly brasses for any variable you need displayed."
"string","How do you get a character from an ASCII value?","Use chr(): chr(65) returns 'A'."
"string","How do you get a character from an ASCII value?","Use `ord()`: `ord('A')` returns `65`."
"string","How do you get the ASCII value of a character?","Use ord(): ord('A') returns 65."
"string","How do you get the ASCII value of a character?","using the ord() function"
"string","How do you join a list of strings into a single string?","You can join a list of strings with the join() method."
"string","How do you reverse a string?","Use slicing: string[::-1]."
"string","How do you reverse a string?","Use slicing: `string[::-1]`."
"string","How do you split a string into a list?","To split a string into a list, use the split() method." 
"string","How would you reverse a string?","You can reverse a string using slicing: "Python"[::-1] results in "nohtyP"."
"string","What does string.replace('old', 'new') do?","string.replace('old', 'new') replaces all occurrences of 'old' with 'new' in a string."
"string","What is slicingstrings?","Slicing in strings allows extracting a part of the string: "Python"[1:4] results in "yth"."
"string","What is the difference between + and join() when combining strings?","The + operator concatenates strings, while join() is more efficient for joining multiple strings in a sequence."
"string","What is the output of `str(True)`?","Yes, lists can contain any data type, including dictionaries."
"string","What is the output of str(True)?","'True'."
"string","What is the purpose of the strip() method?","The strip() method removes leading and trailing whitespace from a string."
"string","What is the result of "Python" * 3?",""Python" * 3 results in "PythonPythonPython"."
"string","What is the result of len("Python")?","len("Python") returns 6 because the string contains 6 characters."
"string","How do you check if a string is a palindrome?","Compare the string with its reverse: string == string[::-1]."
"string","How do you split a string into a list of words?","Use split(): "Hello world".split()."
"string","How do you replace a substring in a string?","Use replace()."
"string","How do you check if a string is a number?","Use str.isdigit()."
"string","How do you convert a string to lowercase?","Use string.lower()."
"string","How do you convert a string to uppercase?","Use string.upper()."
"string","How do you find the ASCII value of a character?","Use ord()."
"string","How do you get the character from an ASCII value?","Use chr()."
"string","How do you format a string with a specific number of decimals?","Use f"{value:.2f}" for 2 decimal places."
"string","How do you join multiple strings with a separator?","Use "separator".join(list_of_strings)."
"string","How do you join multiple strings with a separator?","Use `"separator".join(list_of_strings)`."
"string","What does `max()` do when applied to a list of strings?","It returns the lexicographically largest string."
"tuple","Can a tuple contain a list?","Yes, a tuple can contain a list: (1, [2, 3])."
"tuple","Can a tuple contain mutable objects like lists?","Yes, but the tuple itself is immutable, so the objects inside can still be modified/"
"tuple","Can a tuple contain mutable objects like lists?","Yes, but the tuple itself is immutable, so the objects inside can still be modified."
"tuple","Can tuples have duplicate elements?","Yes, tuples can have duplicate elements."
"tuple","Can you change the value of a tuple after it’s created?","No, tuples are immutable."
"tuple","Can you change the values in a tuple?","No, you cannot change the values in a tuple after it’s created."
"tuple","Can you use a tuple as a dictionary key?","Yes, because tuples are hashable (if they contain only immutable elelments)."
"tuple","Can you use a tuple as a dictionary key?","Yes, because tuples are hashable (if they contain only immutable elements)."
"tuple","How can you check if a value exists in a tuple?","You check for existence in a tuple with in: 5 in (1, 2, 3) results in False."
"tuple","How do you access elements in a tuple?","You access elements in a tuple using indexing: my_tuple[0]."
"tuple","How do you check if a tuple contains a specific element?","Use element in my_tuple."
"tuple","How do you check if a tuple contains a specific element?","Use `element in my_tuple`."
"tuple","How do you check if two tuples are equal?","Use == to compare: tuple1 == tuple2."
"tuple","How do you check if two tuples are equal?","Use `==` to compare: `tuple1 == tuple2`."
"tuple","How do you check the number of occurrences of an element in a tuple?","Use the count() method: my_tuple.count(element)."
"tuple","How do you check the number of occurrences of an element in a tuple?","Use the `count()` method: `my_tuple.count(element)`."
"tuple","How do you concatenate two tuples?","You can concatenate two tuples using +: (1, 2) + (3, 4) results in (1, 2, 3, 4)."
"tuple","How do you concatenate two tuples?","Use the + operator: tuple1 + tuple2."
"tuple","How do you concatenate two tuples?","Use the `+` operator: `tuple1 + tuple2`."
"tuple","How do you convert a list into a tuple?","You can convert a list to a tuple using tuple(): tuple([1, 2, 3]) results in (1, 2, 3)."
"tuple","How do you convert a set to a tuple?","Use tuple(): tuple(my_set)."
"tuple","How do you convert a tuple to a list?","Use the list() function: list(my_tuple)."
"tuple","How do you convert a tuple to a list?","Use the `list()` function: `list(my_tuple)`."
"tuple","How do you count the number of occurrences of an element in a tuple?","You can count occurrences using the count() method: my_tuple.count(3)."
"tuple","How do you create a tuple with multiple elements?","You create it by using parentheses: (1, 2, 3)."
"tuple","How do you create a tuple with multiple elements?","You create it by using parentheses: `(1, 2, 3)`."
"tuple","How do you create a tuple with one element?","You create a tuple with one element by adding a trailing comma: (5,)."
"tuple","How do you create a tuple with one element?","Use a trailing comma: (5,)."
"tuple","How do you create a tuple with one element?","Use a trailing comma: `(5,)`."
"tuple","How do you create an empty tuple?","An empty tuple is created using () or tuple()."
"tuple","How do you find the index of an element in a tuple?","Use my_tuple.index(element)."
"tuple","How do you find the index of an element in a tuple?","Use `my_tuple.index(element)`."
"tuple","How do you find the length of a tuple?","Use len(my_tuple)."
"tuple","How do you find the length of a tuple?","Use `len(my_tuple)`."
"tuple","How do you reverse a tuple?","Use slicing: my_tuple[::-1]."
"tuple","How do you reverse a tuple?","Use slicing: `my_tuple[::-1]`."
"tuple","How do you unpack a tuple into variables?","Use assignment: a, b = my_tuple."
"tuple","How do you unpack a tuple into variables?","Use assignment: `a, b = my_tuple`."
"tuple","How do you unpack a tuple?","You can unpack a tuple by assigning its elements to variables: x, y = (1, 2)."
"tuple","What happens when you try to append to a tuple?","Trying to append to a tuple results in an error because tuples are immutable."
"tuple","What is a tuple?","A tuple in Python is an ordered collection of elements, similar to a list but immutable."
"tuple","What is the difference between a tuple and a list?","The main difference is that tuples are immutable (cannot be modified) while lists are mutable."
"tuple","What is the immutability property of tuples?","Tuples are immutable, meaning their values cannot be modified after creation."
"tuple","What is the result of slicing a tuple like my_tuple[1:3]?","The result of slicing a tuple like my_tuple[1:3] is a subtuple: (2, 3)."
"tuple","How do you concatenate two tuples?","Use the + operator: tuple1 + tuple2."
"tuple","What happens if you try to assign a value to an element in a tuple?","It raises a TypeError since tuples are immutable."
"tuple","How do you find the length of a tuple?","Use len(tuple)."
"tuple","How do you create a tuple with a single element?","Use a trailing comma: (5,)."
"tuple","How do you unpack a tuple into variables?","a, b = my_tuple."
"tuple","How do you reverse a tuple?","Use slicing: tuple[::-1]."
"tuple","Can a tuple contain different data types?","Yes, a tuple can contain any combination of data types."
"tuple","How do you check if a tuple is empty?","Use if not my_tuple:."
"tuple","How do you convert a tuple to a list?","Use list(my_tuple)."
"tuple","How do you find the maximum element in a tuple?","Use max(): max(my_tuple)."
"tuple","How do you find the minimum element in a tuple?","Use min(): min(my_tuple)."
"tuple","How do you count the number of occurrences of an element in a tuple?","Use my_tuple.count(element)."
"tuple","How do you check if a tuple contains a specific element?","Use element in my_tuple."
"tuple","How do you compare two tuples for equality?","Use the == operator: tuple1 == tuple2."
"tuple","How do you iterate over the elements of a tuple?","Use a for loop: for element in my_tuple:."
"tuple","What is the result of (1, 2) * 3?","(1, 2, 1, 2, 1, 2)—it repeats the tuple three times."
"tuple","Can you add elements to a tuple?","No, tuples are immutable."
"tuple","How do you convert a tuple into a set?","Use set(my_tuple)."
"tuple","Can you use a tuple as a dictionary key?","Yes, as long as the tuple is immutable."
"tuple","How do you find the index of an element in a tuple?","Use my_tuple.index(element)."