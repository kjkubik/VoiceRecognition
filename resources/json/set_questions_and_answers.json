[
    {
        "question": "What is a set?",
        "answer": "a set is a collection of unique elements. All duplicate elements are ignored. a set is mutable, and because it is mutable, it is unhashable."
    },
    {
        "question": "What does hashed mean?",
        "answer": "Hashed refers to the process of converting data into a fixed-size string of characters that represents the original data."
    },
    {
        "question": "Can a set contain a set as an element?",
        "answer": "No, Since sets are mutable, they are not hashable, and therefore cannot be added as elements to another set."
    },
    {
        "question": "Can a set contain duplicate elements?",
        "answer": "No, a set cannot contain duplicate elements. By definition a set is a unique collection of elements."
    },
    {
        "question": "How can you check if an element exists in a set?",
        "answer": "You can check if an element exists in a set using the in operator."
    },
    {
        "question": "How do you check if an element is in a set?",
        "answer": "Use element in my_set."
    },
    {
        "question": "How can you find the union of two sets?",
        "answer": "You find the union of two sets using the | operator or union() method."
    },
    {
        "question": "How do you add an element to a set?",
        "answer": "using the add method."
    },
    {
        "question": "How do you check if a set is a subset of another set?",
        "answer": "Use is subset method"
    },
    {
        "question": "How do you check if a set is a superset of another set?",
        "answer": "Use is superset method"
    },
    {
        "question": "How do you check if two sets are disjoint (have no common elements)?",
        "answer": "Use isdisjoint(): set1.isdisjoint(set2)."
    },
    {
        "question": "How do you check if two sets are disjoint (have no common elements?",
        "answer": "Use is disjoint method"
    },
    {
        "question": "How do you clear all elements from a set?",
        "answer": "Use clear()."
    },
    {
        "question": "How do you clear all elements from a set?",
        "answer": "Use the clear method"
    },
    {
        "question": "How do you convert a list to a set?",
        "answer": "Use set(): set(my_list)."
    },
    {
        "question": "How do you convert a set to a list?",
        "answer": "Use list(): list(my_set)."
    },
    {
        "question": "How do you convert a set to a list?",
        "answer": "Use 'list()': 'list(my_set)'."
    },
    {
        "question": "How do you create a set from a list?",
        "answer": "You can create a set from a list using set(): set([1, 2, 3])."
    },
    {
        "question": "How do you create a set with multiple elements from a string?",
        "answer": "Use set(string\").\""
    },
    {
        "question": "How do you create a set with multiple elements from a string?",
        "answer": "Use 'set(string\")'.\""
    },
    {
        "question": "How do you create a set with unique elements from a list?",
        "answer": "Use set(): set([1, 2, 2, 3]) results in {1, 2, 3}."
    },
    {
        "question": "How do you create a set with unique elements from a list?",
        "answer": "Use 'set()': 'set([1, 2, 2, 3])' results in '{1, 2, 3}'."
    },
    {
        "question": "How do you create an empty set?",
        "answer": "You create an empty set using set()."
    },
    {
        "question": "How do you find the difference of two sets?",
        "answer": "Use the - operator or the difference() method: set1 - set2."
    },
    {
        "question": "How do you find the difference of two sets?",
        "answer": "Use the '-' operator or the 'difference()' method: 'set1 - set2'."
    },
    {
        "question": "How do you find the intersection of two sets?",
        "answer": "You find the intersection of two sets using the & operator or intersection() method."
    },
    {
        "question": "How do you find the intersection of two sets?",
        "answer": "Use the & operator or the intersection() method: set1 & set2."
    },
    {
        "question": "How do you find the intersection of two sets?",
        "answer": "Use the '&' operator or the 'intersection()' method: 'set1 & set2'."
    },
    {
        "question": "How do you find the largest element in a set?",
        "answer": "Use max() function: max(my_set)."
    },
    {
        "question": "How do you find the largest element in a set?",
        "answer": "Use 'max()' function: 'max(my_set)'."
    },
    {
        "question": "How do you find the length of a set?",
        "answer": "You find the length of a set using len()."
    },
    {
        "question": "How do you find the length of a set?",
        "answer": "Use len()."
    },
    {
        "question": "How do you find the length of a set?",
        "answer": "Use 'len()'."
    },
    {
        "question": "How do you find the smallest element in a set?",
        "answer": "Use min() function: min(my_set)."
    },
    {
        "question": "How do you find the smallest element in a set?",
        "answer": "Use 'min()' function: 'min(my_set)'."
    },
    {
        "question": "How do you find the symmetric difference of two sets?",
        "answer": "Use the ^ operator or the symmetric_difference() method: set1 ^ set2"
    },
    {
        "question": "How do you find the symmetric difference of two sets?",
        "answer": "Use the '^' operator or the 'symmetric_difference()' method: 'set1 ^ set2'."
    },
    {
        "question": "How do you find the union of two sets?",
        "answer": "Use the | operator or the union() method: set1 | set2."
    },
    {
        "question": "How do you find the union of two sets?",
        "answer": "Use the '|' operator or the 'union()' method: 'set1 | set2'."
    },
    {
        "question": "How do you iterate over all elements of a set?",
        "answer": "Use a for loop: for element in my_set:."
    },
    {
        "question": "How do you iterate over all elements of a set?",
        "answer": "Use a 'for' loop: 'for element in my_set:'."
    },
    {
        "question": "How do you perform a set difference?",
        "answer": "You perform a set difference using - or difference()."
    },
    {
        "question": "How do you remove a random element from a set?",
        "answer": "Use pop()."
    },
    {
        "question": "How do you remove a random element from a set?",
        "answer": "Use 'pop()'."
    },
    {
        "question": "How do you remove an arbitrary element from a set?",
        "answer": "You remove an arbitrary element using pop() (which also returns the removed element)."
    },
    {
        "question": "How do you remove an element from a set?",
        "answer": "You remove an element using remove(): my_set.remove(3)."
    },
    {
        "question": "How do you remove an element from a set?",
        "answer": "Use remove() or discard()."
    },
    {
        "question": "How do you remove an element from a set?",
        "answer": "Use 'remove()' or 'discard()'."
    },
    {
        "question": "What happens if you try to add a mutable element (like a list) to a set?",
        "answer": "You cannot add mutable elements (like lists) to a set because they are not hashable."
    },
    {
        "question": "What is a set?",
        "answer": "A set is an unordered collection of unique elements."
    },
    {
        "question": "What is the difference between 'remove()' and 'discard()' in sets?",
        "answer": "Each removes the element. But remove raises and error, discard does not."
    },
    {
        "question": "What is the difference between a set and a list?",
        "answer": "Sets do not allow duplicate elements, unlike lists."
    },
    {
        "question": "What is the difference between remove() and discard() in sets?",
        "answer": "remove() raises an error if the element is not found, while discard() doesn't."
    },
    {
        "question": "What is the purpose of the frozenset type?",
        "answer": "A frozenset is an immutable version of a set."
    },
    {
        "question": "What is the purpose of the frozenset?",
        "answer": "A frozenset is an immutable set, meaning its elements cannot be modified."
    },
    {
        "question": "What is the result of set([1, 2, 3]) & set([2, 3, 4])?",
        "answer": "{2, 3}\u2014this is the intersection of the two sets."
    },
    {
        "question": "How do you find the union of two sets?",
        "answer": "Use the | operator: set1 | set2."
    },
    {
        "question": "How do you find the difference of two sets?",
        "answer": "Use the - operator: set1 - set2."
    },
    {
        "question": "What does set([1, 2, 2, 3]) return?",
        "answer": "{1, 2, 3}\u2014a set removes duplicates."
    },
    {
        "question": "How do you check if two sets are disjoint (have no common elements)?",
        "answer": "Use isdisjoint(): set1.isdisjoint(set2)."
    },
    {
        "question": "How do you check if a set is a subset of another set?",
        "answer": "Use issubset(): set1.issubset(set2)."
    },
    {
        "question": "How do you check if a set is a superset of another set?",
        "answer": "Use issuperset(): set1.issuperset(set2)."
    },
    {
        "question": "Can a set contain mutable elements like lists?",
        "answer": "No, sets cannot contain mutable elements, only immutable ones."
    },
    {
        "question": "How do you remove a random element from a set?",
        "answer": "Use pop()."
    },
    {
        "question": "How do you create a frozen set in Python?",
        "answer": "Use frozenset(): frozenset(my_set)."
    },
    {
        "question": "What does the symmetric_difference() method do?",
        "answer": "It returns the set of elements that are in either of the sets but not both."
    },
    {
        "question": "What is the time complexity of checking if an element exists in a set?",
        "answer": "It is O(1) on average."
    },
    {
        "question": "How do you create a set from a string?",
        "answer": "Use set('string'), which creates a set of unique characters."
    },
    {
        "question": "How do you find the number of elements in a set?",
        "answer": "Use len()."
    },
    {
        "question": "How do you create a copy of a set?",
        "answer": "Use my_set.copy()."
    },
    {
        "question": "How do you iterate over elements of a set?",
        "answer": "Use a for loop: for element in my_set."
    },
    {
        "question": "What is the time complexity of adding an element to a set?",
        "answer": "It is O(1) on average."
    },
    {
        "question": "How do you remove all elements from a set?",
        "answer": "Use clear()."
    },
    {
        "question": "How do you convert a list to a set?",
        "answer": "Use set(my_list)."
    },
    {
        "question": "Can sets contain other sets as elements?",
        "answer": "No, sets are mutable and therefore not hashable."
    }   
]